import { GetUser, PaperConstructorType } from "../interfaces/EmbeddedWallets/EmbeddedWallets";
import { EmbeddedWalletIframeCommunicator } from "../utils/iFrameCommunication/EmbeddedWalletIframeCommunicator";
import { Auth } from "./Auth";
export declare class PaperEmbeddedWalletSdk {
    protected clientId: string;
    protected querier: EmbeddedWalletIframeCommunicator<any>;
    private wallet;
    /**
     * Used to manage the Auth state of the user.
     */
    auth: Auth;
    /**
     * @example
     * const Paper = new PaperEmbeddedWalletSdk({ clientId: "", chain: "Goerli" });
     * @param {string} initParams.clientId the clientId found on the {@link https://withpaper.com/dashboard/developers developer's dashboard}
     * @param {Chains} initParams.chain sets the default chain that the EmbeddedWallet will live on.
     * @param {CustomizationOptionsType} initParams.styles sets the default style override for any modal that pops up asking for user's details when creating wallet or logging in.
     */
    constructor({ clientId, chain, styles }: PaperConstructorType);
    /**
     * Gets the various status states of the user
     * @example
     *  const user = await Paper.getUser();
     *  switch (userStatus.status) {
     *  case UserStatus.LOGGED_OUT: {
     *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user
     *    break;
     *  }
     *  case UserStatus.LOGGED_IN_WALLET_INITIALIZED: {
     *    // user is logged in and wallet is all set up.
     *    // You have access to:
     *    userStatus.data.authDetails;
     *    userStatus.data.walletAddress;
     *    userStatus.data.wallet;
     *    break;
     *  }
     *}
     * @returns {GetUser} an object to containing various information on the user statuses
     */
    getUser(): Promise<GetUser>;
}
