import type { EmbeddedWallet } from "../../lib/EmbeddedWallets/EmbeddedWallet";
import type { EmbeddedWalletIframeCommunicator } from "../../utils/iFrameCommunication/EmbeddedWalletIframeCommunicator";
import { CustomizationOptionsType } from "../utils/IframeCommunicator";
export declare type Chains = "Polygon" | "Mumbai" | "Goerli" | "Ethereum";
export declare type ClientIdConstructorType = {
    clientId: string;
};
export declare type ClientIdWithQuerierType = ClientIdConstructorType & {
    querier: EmbeddedWalletIframeCommunicator<any>;
};
export declare type ClientIdWithQuerierAndChainType = ClientIdWithQuerierType & {
    chain: Chains;
};
export declare type PaperConstructorType = ClientIdConstructorType & {
    chain: Chains;
    styles?: CustomizationOptionsType;
};
export declare type AuthDetails = {
    email?: string;
};
export declare type InitializedUser = {
    status: UserStatus.LOGGED_IN_WALLET_INITIALIZED;
    wallet: EmbeddedWallet;
    walletAddress: string;
    authDetails: AuthDetails;
};
export declare enum UserStatus {
    LOGGED_OUT = "Logged Out",
    LOGGED_IN_WALLET_INITIALIZED = "Logged In, Wallet Initialized"
}
export declare enum UserWalletStatus {
    LOGGED_OUT = "Logged Out",
    LOGGED_IN_WALLET_UNINITIALIZED = "Logged In, Wallet Uninitialized",
    LOGGED_IN_NEW_DEVICE = "Logged In, New Device",
    LOGGED_IN_WALLET_INITIALIZED = "Logged In, Wallet Initialized"
}
export declare type WalletAddressObjectType = {
    walletAddress: string;
};
export declare type SetUpWalletReturnType = WalletAddressObjectType & {
    initialUserStatus: UserWalletStatus;
};
export declare type SetUpWalletRpcReturnType = WalletAddressObjectType & {
    deviceShareStored: string;
};
export declare type LogoutReturnType = {
    success: boolean;
};
export declare type GetAuthDetailsReturnType = {
    authDetails?: AuthDetails;
};
export declare type GetUserWalletStatusRpcReturnType = {
    status: UserWalletStatus.LOGGED_OUT;
    user: undefined;
} | {
    status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED;
    user: {
        authDetails: AuthDetails;
    };
} | {
    status: UserWalletStatus.LOGGED_IN_NEW_DEVICE;
    user: {
        authDetails: AuthDetails;
        walletAddress: string;
    };
} | {
    status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED;
    user: Omit<InitializedUser, "wallet" | "status">;
};
export declare type GetUserWalletStatusFnReturnType = {
    status: UserWalletStatus.LOGGED_OUT;
    user: undefined;
} | {
    status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED;
    user: {
        authDetails: AuthDetails;
    };
} | {
    status: UserWalletStatus.LOGGED_IN_NEW_DEVICE;
    user: {
        authDetails: AuthDetails;
        walletAddress: string;
    };
} | {
    status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED;
    user: Omit<InitializedUser, "status">;
};
export declare type GetUser = {
    status: UserStatus.LOGGED_OUT;
} | InitializedUser;
